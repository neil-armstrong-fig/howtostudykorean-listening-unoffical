apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "com.google.android.gms.oss-licenses-plugin"

kotlin {
    experimental {
        coroutines "enable"
    }
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        androidTest.java.srcDirs += ["src/androidTest/kotlin", "src/testUtilities/kotlin"]
        test.java.srcDirs += ["src/test/kotlin", "src/testUtilities/kotlin"]
    }
    defaultConfig {
        applicationId "com.howtostudykorean"
        minSdkVersion 19
        targetSdkVersion 29
        vectorDrawables.useSupportLibrary = true
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            multiDexEnabled true
        }
    }
    buildFeatures {
        dataBinding = true
    }
    packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/INDEX.LIST"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude "META-INF/ASL2.0"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint

dependencies {
    ktlint "com.github.shyiko:ktlint:0.31.0"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "com.google.android.gms:play-services-oss-licenses:17.0.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "org.jsoup:jsoup:1.13.1"
    implementation "com.memetix:microsoft-translator-java-api:0.6.2"

    runtimeOnly "com.noveogroup.android:android-logger:1.3.6"

    testImplementation "org.slf4j:slf4j-simple:1.7.30"
    testImplementation "org.slf4j:jcl-over-slf4j:1.7.30"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation("com.nhaarman:mockito-kotlin:1.5.0") {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation "org.hamcrest:hamcrest-junit:2.0.0.0"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestImplementation "androidx.multidex:multidex-instrumentation:2.0.0"
    androidTestImplementation("androidx.test.espresso:espresso-core:3.3.0") {
        exclude group: "com.android.support", module: "support-annotations"
    }
    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.3.0") {
        exclude group: "com.android.support"
    }
    androidTestImplementation("androidx.test.espresso:espresso-intents:3.3.0") {
        exclude group: "com.android.support"
    }
    androidTestImplementation "androidx.annotation:annotation:1.0.0"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation("com.nhaarman:mockito-kotlin:1.5.0") {
        exclude group: "org.jetbrains.kotlin"
        exclude group: "org.mockito"
    }
    androidTestImplementation "org.awaitility:awaitility:4.0.3"
}
android.unitTestVariants.all { variant ->
    variant.getRuntimeConfiguration().exclude group: "com.noveogroup.android", module: "android-logger"
}
